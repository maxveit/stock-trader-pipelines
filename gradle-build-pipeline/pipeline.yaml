#       Copyright 2017-2019 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: gradle-build
spec:
  params:
  - name: buildUid
  - name: gitRevision
  - name: gitUrl
  - name: envUrl
  - name: envRevision
  - name: cicdBaseImage
  workspaces:
  - name: pipeline-workspace
  tasks:
  - name: init
    taskRef:
      name: init-pipeline
    params:
    - name: uid
      value: $(params.buildUid)
    - name: appUrl
      value: $(params.gitUrl)
    - name: appRevision
      value: $(params.gitRevision)
    - name: envUrl
      value: $(params.envUrl)
    - name: envRevision
      value: $(params.envRevision)
    - name: env
      value: "dev.sh"
    - name: cicdBaseImage
      value: $(params.cicdBaseImage)
    workspaces:
    - name: pipeline
      workspace: pipeline-workspace
  - name: gradle-build
    runAfter:
      - init
    taskRef:
      name: gradle
    workspaces:
    - name: pipeline
      workspace: pipeline-workspace
    params:
      - name: appDir
        value: $(tasks.init.results.appDir)
      - name: envDir
        value: $(tasks.init.results.envDir)
      - name: paramSh
        value: $(tasks.init.results.paramSh)
      - name: cicdBaseImage
        value: $(params.cicdBaseImage)
  - name: container-build
    runAfter:
      - gradle-build
    taskRef:
      name: container-build-push
    workspaces:
    - name: pipeline
      workspace: pipeline-workspace
    params:
      - name: appDir
        value: $(tasks.init.results.appDir)
      - name: envDir
        value: $(tasks.init.results.envDir)
      - name: paramSh
        value: $(tasks.init.results.paramSh)
      - name: cicdBaseImage
        value: $(params.cicdBaseImage)
#  - name: provision-services
#    runAfter:
#      - container-build
#    taskRef:
#      name: provision-services
#    workspaces:
#    - name: pipeline
#      workspace: pipeline-workspace
#    params:
#      - name: file
#        value: $(tasks.init.results.services)